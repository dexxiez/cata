import{m as e,k as t,l as a,n as l,o as s,q as n,s as o,t as r,u as i,v as p,T as c,H as d,w as u,x as h,y as g,z as m,A as S,D as I,F as f,G as v}from"./preset_utils-Dz2KMMFX.chunk.js";import{R as y}from"./suggest_reforges_action-DVUR84On.chunk.js";import{$ as R,T as P,a0 as O,a1 as b,a2 as A,a3 as T,a4 as C,a5 as w,a6 as H,a7 as k,G as B,a8 as E,a9 as D,aa as G,ab as F,ac as L,ad as x,ae as q,af as U,ag as M,b as V,a as W,ah as j,ai as z,aj as N,ak as _,al as K,am as $,S as J,F as Q,R as X}from"./detailed_results-BcgtFdXH.chunk.js";import{S as Y}from"./inputs-CcuqiyG1.chunk.js";e({fieldName:"defensiveDelay",label:"Defensives Delay",labelTooltip:"Minimum delay between using more defensive cooldowns."});const Z={inputs:[t({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:R.Blood},{name:"Frost",value:R.Frost},{name:"Unholy",value:R.Unholy}],changeEmitter:e=>P.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"opener",label:"Opener",labelTooltip:"Chose what opener to perform:<br>\t\t\t\t<b>Regular</b>: Regular opener.<br>\t\t\t\t<b>Threat</b>: Full IT spam for max threat.",values:[{name:"Regular",value:O.Regular},{name:"Threat",value:O.Threat}],changeEmitter:e=>P.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"Chose what metric to optimize:<br>\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.",values:[{name:"Hps",value:b.Hps},{name:"Tps",value:b.Tps}],changeEmitter:e=>P.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"Chose what blood rune spender to use.",values:[{name:"Blood Strike",value:A.BloodStrike},{name:"Blood Boil",value:A.BloodBoil},{name:"Heart Strike",value:A.HeartStrike}],changeEmitter:e=>P.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"bloodTapPrio",label:"Blood Tap",labelTooltip:"Chose how to use Blood Tap:<br>\t\t\t\t<b>Use as Defensive Cooldown</b>: Use as defined in Cooldowns (Requires T10 4pc).<br>\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.",values:[{name:"Use as Defensive Cooldown",value:T.Defensive},{name:"Offensive",value:T.Offensive}],changeEmitter:e=>P.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},ee={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-50s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-10s"}}},{action:{castSpell:{spellId:{spellId:46584}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"89s"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:81130}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:55095}}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49222}}}]}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{auraIsActive:{auraId:{spellId:55233}}},castSpell:{spellId:{spellId:82176}}}},{action:{condition:{auraIsActive:{auraId:{spellId:96171}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:77535}}}}}]}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"1"}}}}]}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49998,tag:1}}}]}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}},castSpell:{spellId:{spellId:55050}}}},{hide:!0,action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{hide:!0,action:{condition:{cmp:{op:"OpLt",lhs:{auraRemainingTime:{auraId:{spellId:46584}}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}},{action:{castSpell:{spellId:{spellId:46584}}}}]},te={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-10s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"20%"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"40%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}}]}},castSpell:{spellId:{spellId:49222}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:48743}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},castSpell:{spellId:{itemId:65109}}}},{action:{condition:{or:{vals:[{not:{val:{dotIsActive:{spellId:{spellId:55095}}}}},{not:{val:{dotIsActive:{spellId:{spellId:55078}}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{nextRuneCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{castSpell:{spellId:{spellId:46584}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"80"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{runeCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"1s"}}}},castSpell:{spellId:{spellId:45529}}}}]},ae={items:[{id:65186,enchant:4206,gems:[52294,52231],reforging:126},{id:60227,gems:[52231],reforging:122},{id:65188,enchant:4198,gems:[52221],reforging:126},{id:69878,randomSuffix:-128,enchant:1354,reforging:122},{id:65184,enchant:4103,gems:[52221,52242],reforging:129},{id:60228,enchant:3850,gems:[52242,0],reforging:147},{id:65185,enchant:4121,gems:[52242,0],reforging:132},{id:65370,randomSuffix:-226,gems:[52221,52242],reforging:125},{id:65182,enchant:4270,gems:[52242,52242]},{id:60229,enchant:4062,gems:[52221,52242],reforging:126},{id:65372,randomSuffix:-128,reforging:125},{id:60226,gems:[52242],reforging:146},{id:65048},{id:62471},{id:65003,enchant:3847,reforging:147},{},{id:64676,gems:[52242],reforging:122}]},le=a("Pre-Raid",{items:[{id:59359,enchant:4206,gems:[52294,59480,59493]},{id:56319,reforging:129},{id:56318,enchant:4198,gems:[52221]},{id:62383,enchant:4100,reforging:122},{id:55058,enchant:4103,gems:[52242],reforging:133},{id:57870,enchant:3850,gems:[52231,0]},{id:56428,enchant:4121,gems:[52221,0],reforging:129},{id:55059,gems:[52242,52242],reforging:122},{id:58102,enchant:4270,gems:[52231,52242],reforging:126},{id:62418,enchant:4062,gems:[52242],reforging:132},{id:56444},{id:62440},{id:58483,gems:[52242]},{id:56347},{id:56342,enchant:3847,reforging:151},{},{id:62243,gems:[52242],reforging:139}]}),se=a("P1",ae),ne=l("Simple",te),oe=l("Defensive",ee),re=s("P1",C.fromMap({[w.StatStrength]:2.45,[w.StatAgility]:1.2,[w.StatStamina]:3,[w.StatAttackPower]:1,[w.StatHitRating]:6,[w.StatCritRating]:1.65,[w.StatHasteRating]:1.58,[w.StatExpertiseRating]:5,[w.StatArmor]:1,[w.StatDodgeRating]:2.5,[w.StatParryRating]:2.44,[w.StatBonusArmor]:1,[w.StatMasteryRating]:7},{[H.PseudoStatMainHandDps]:12.29,[H.PseudoStatOffHandDps]:0})),ie={name:"Blood",data:k.create({talentsString:"03323200132222311321-2-003",glyphs:B.create({prime1:E.GlyphOfDeathStrike,prime2:E.GlyphOfHeartStrike,prime3:E.GlyphOfRuneStrike,major1:D.GlyphOfAntiMagicShell,major2:D.GlyphOfDancingRuneWeapon,major3:D.GlyphOfBoneShield,minor1:G.GlyphOfDeathGate,minor2:G.GlyphOfPathOfFrost,minor3:G.GlyphOfHornOfWinter})})},pe=F.create({classOptions:{startingRunicPower:0}}),ce=L.create({flask:x.FlaskOfSteelskin,food:q.FoodBeerBasedCrocolisk,defaultPotion:U.GolembloodPotion,prepopPotion:U.GolembloodPotion,tinkerHands:M.TinkerHandsSynapseSprings}),de={profession1:V.Engineering,profession2:V.Leatherworking,distanceFromTarget:5},ue=n(J.SpecBloodDeathKnight,{cssClass:"blood-death-knight-sim-ui",cssScheme:W.getCssClass(W.DeathKnight),knownIssues:[],epStats:[w.StatStamina,w.StatStrength,w.StatAgility,w.StatAttackPower,w.StatExpertiseRating,w.StatHitRating,w.StatCritRating,w.StatHasteRating,w.StatHealth,w.StatArmor,w.StatBonusArmor,w.StatDodgeRating,w.StatParryRating,w.StatNatureResistance,w.StatShadowResistance,w.StatFrostResistance,w.StatMasteryRating],epPseudoStats:[H.PseudoStatMainHandDps,H.PseudoStatOffHandDps],epReferenceStat:w.StatAttackPower,displayStats:j.createDisplayStatArray([w.StatHealth,w.StatArmor,w.StatStamina,w.StatStrength,w.StatAgility,w.StatAttackPower,w.StatExpertiseRating,w.StatMasteryRating],[H.PseudoStatSpellHitPercent,H.PseudoStatSpellCritPercent,H.PseudoStatPhysicalHitPercent,H.PseudoStatPhysicalCritPercent,H.PseudoStatMeleeHastePercent,H.PseudoStatDodgePercent,H.PseudoStatParryPercent]),defaults:{gear:se.gear,epWeights:re.epWeights,statCaps:(()=>{const e=(new C).withPseudoStat(H.PseudoStatPhysicalHitPercent,8),t=(new C).withStat(w.StatExpertiseRating,26*z);return e.add(t)})(),other:de,consumes:ce,talents:ie.data,specOptions:pe,raidBuffs:N.create({retributionAura:!0,powerWordFortitude:!0,markOfTheWild:!0,icyTalons:!0,hornOfWinter:!0,abominationsMight:!0,leaderOfThePack:!0,bloodlust:!0,arcaneTactics:!0,devotionAura:!0,resistanceAura:!0}),partyBuffs:_.create({}),individualBuffs:K.create({}),debuffs:$.create({bloodFrenzy:!0,sunderArmor:!0,ebonPlaguebringer:!0,criticalMass:!0,vindication:!0,frostFever:!0})},modifyDisplayStats:e=>{const t=e.getCurrentStats();if(t.finalStats){const e=.08*t.finalStats.stats[w.StatStamina],a=14*e;return{buffs:(new C).addStat(w.StatHealth,a).addStat(w.StatStamina,e)}}return{}},playerIconInputs:[],rotationInputs:Z,includeBuffDebuffInputs:[o],excludeBuffDebuffInputs:[r,i],otherInputs:{inputs:[p,c,d,u,h,g,m,S,I,Y(),f]},encounterPicker:{showExecuteProportion:!1},presets:{epWeights:[re],rotations:[ne,oe],talents:[ie],gear:[le,se]},autoRotation:e=>ne.rotation.rotation,raidSimPresets:[{spec:J.SpecBloodDeathKnight,talents:ie.data,specOptions:pe,consumes:ce,defaultFactionRaces:{[Q.Unknown]:X.RaceUnknown,[Q.Alliance]:X.RaceWorgen,[Q.Horde]:X.RaceTroll},defaultGear:{[Q.Unknown]:{},[Q.Alliance]:{1:se.gear,2:se.gear,3:se.gear,4:se.gear},[Q.Horde]:{1:se.gear,2:se.gear,3:se.gear,4:se.gear}},otherDefaults:de}]});class he extends v{constructor(e,t){super(e,t,ue),t.sim.waitForInit().then((()=>{new y(this)}))}}export{he as B};
